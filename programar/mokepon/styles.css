/*
 
Explication GPT-4: CSS Grid es un sistema de diseño basado en cuadrículas que ha revolucionado 
el diseño web al permitir a los desarrolladores crear diseños complejos sin tener que usar flotantes y posicionamiento. A diferencia de las tablas tradicionales, CSS Grid ofrece muchas más posibilidades de diseño y permite a los elementos hijos del contenedor de la cuadrícula posicionarse de manera que puedan superponerse y formar capas3. Para utilizar eficazmente CSS Grid, es importante entender sus terminologías básicas, como columnas, filas, celdas, líneas de cuadrícula y canalizaciones1. Un ejemplo práctico para visualizar cómo se utiliza CSS Grid en el mundo real sería pensar en ello como un tablero de ajedrez. Las celdas del tablero son como las celdas de la cuadrícula, las filas y columnas del tablero son como las filas y columnas de la cuadrícula. Al igual que en el ajedrez puedes mover tus piezas (elementos) a diferentes celdas del tablero (cuadrícula), en CSS Grid puedes mover tus elementos a diferentes celdas de la cuadrícula.

Css grid podemos organizar nuestros elementos en filas y columnas a la vez, es decir en forma de
celdas.

para este caso queremos utilizar css grid para organizar en dos columnas la seccion de ataques del 
jugador y el enemigo y asi tener mas orden en nuestro videojuego.
 */

@import url('https://fonts.googleapis.com/css2?family=Fredoka+One&family=Poppins:wght@300&display=swap');

body {
  font-family: 'Poppins', sans-serif;
  background-color: #041562;
}

#seleccionar-mascota {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.titulo {
  color: white;
  font-size: 32px;
  font-family: 'Fredoka One', cursive;
}

.subtitulo {
  color: white;
  font-size: 20px;
}

.tarjetas {
  display: flex;
  gap: 10px;
}

.tarjeta-de-mokepon {
  width: 180px;
  height: 100px;
  background: #11468F;
  padding: 10px;
  box-sizing: border-box;
  border-radius: 20px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: white;
}

.tarjeta-de-mokepon img {
  width: 80px;
}

#boton-mascota {
  width: 180px;
  height: 40px;
  border-radius: 20px;
  background: transparent;
  border: 2px solid white;
  color: white;
  font-family: 'Poppins', sans-serif;
  margin-top: 30px;
}

input {
  display: none;
}

#seleccionar-ataque {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.boton-de-ataque {
  background-color: #11468F;
  padding: 10px;
  box-sizing: border-box;
  border-radius: 20px;
  border-color: transparent;
  width: 180px;
  color: white;
  font-family: 'Poppins', sans-serif;
}

#mensajes {
  width: 280px;
  background: #EEEEEE;
  padding: 20px;
  margin-top: 20px;
  border-radius: 20px;
  display: flex;
  align-items: center;
  flex-direction: column;
}

#boton-reiniciar {
  border: none;
  color: #11468F;
  font-family: 'Poppins', sans-serif;
}

/*Uso de csss grid apartir de la propiedad display para el elemento padre 
css grid permite mover elementos en celdad o mallas*/
.ataques {
  display: grid;
  grid-template-columns: 100px 100px; /*crear columnas en css grid */
  color: white;
  /*Hacer que los texto de la dos columnas en grid esten horizontalmente
  centrados */
  text-align: center;
  /*cómo centrar horizontalmente el texto en las columnas de una cuadrícula en CSS:

Utiliza text-align: center; para centrar el texto dentro de un elemento a lo largo del eje horizontal.
Ten en cuenta que text-align: center; sólo funcionará si el contenido del elemento es más pequeño que el ancho del elemento.
Si necesitas centrar un bloque de elementos o un elemento que ocupa todo el ancho del contenedor, puedes usar margin: auto;.
Verifica tu trabajo con las herramientas de desarrollo del navegador para asegurarte de que tus estilos CSS se aplican como esperas. */
}


#vidas-jugador, #vidas-enemigo {
  font-size: 32px;
  margin-bottom: 0;
}
